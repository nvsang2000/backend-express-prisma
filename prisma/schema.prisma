generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique(map: "User_uuid_key") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String?   @unique(map: "User_email_key")
  displayName String?
  isActive    Boolean   @default(true)
  password    String
  role        String    @default("user")
  thumbnail   String?
  updateAt    DateTime?
  createAt    DateTime? @default(now())

  @@map("users")
}

model Category {
  id       Int       @id @default(autoincrement())
  uuid     String    @unique(map: "Category_uuid_key") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String    @unique(map: "Category_name_key")
  sic      String?   @unique(map: "Category_sic_key")
  isActive Boolean?  @default(true)
  createAt DateTime? @default(now())
  updateAt DateTime? @updatedAt
  products Product[] @relation("CategoryToProduct")

  @@map("category")
}

model Product {
  id          Int        @id @default(autoincrement())
  uuid        String     @unique(map: "Product_uuid_key") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  slug        String
  description String?
  isActive    Boolean    @default(true)
  thumnail    String?
  createAt    DateTime?  @default(now())
  updateAt    DateTime?  @updatedAt
  categories  Category[] @relation("CategoryToProduct")

  @@map("products")
}

// model Order {
//   id  String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

// }
